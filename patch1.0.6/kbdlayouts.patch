--- Arduino/libraries/FabGL/src/fabutils.h	2022-03-19 07:11:25.000000000 +0900
+++ Arduino/FabGL/n80FabGL/patch/src/fabutils.h.kbdjp	2022-05-15 14:26:51.943251030 +0900
@@ -1310,6 +1310,15 @@
   VK_CURRENCY,        /**< Currency   : ¤ */
   VK_MU,              /**< Mu         : µ */
 
+  VK_HANKAKU_ZENKAKU_KANJI,
+                      /**< 半角/全角/漢字 */
+  VK_YEN,             /**< YEN: ￥ */
+  VK_MUHENKAN,        /**< 無変換 */
+  VK_HENKAN,          /**< 変換 */
+  VK_KATAKANA_HIRAGANA_ROMAJI,
+                      /**< カタカナ/ひらがな/ローマ字 */
+  VK_SHIFT_0,         /** SHIFT 0 */
+
   VK_ASCII,           /**< Specifies an ASCII code - used when virtual key is embedded in VirtualKeyItem structure and VirtualKeyItem.ASCII is valid */
   VK_LAST,            // marks the last virtual key
 
--- Arduino/libraries/FabGL/src/devdrivers/kbdlayouts.h	2022-03-19 07:11:25.000000000 +0900
+++ Arduino/FabGL/n80FabGL/patch/src/devdrivers/kbdlayouts.h	2022-05-15 14:27:21.964349475 +0900
@@ -114,10 +114,13 @@
 /** @brief Belgian keyboard layout */
 extern const KeyboardLayout BelgianLayout;
 
+/** @brief Japanese keyboard layout */
+extern const KeyboardLayout JapaneseLayout;
+
 
 struct SupportedLayouts {
 
-  static constexpr int LAYOUTSCOUNT = 7;
+  static constexpr int LAYOUTSCOUNT = 8;
 
   static int count()               { return LAYOUTSCOUNT; }
 
@@ -130,6 +133,7 @@
         SpanishLayout.desc,
         FrenchLayout.desc,
         BelgianLayout.desc,
+        JapaneseLayout.desc,
     };
     return NAMES;
   }
@@ -143,6 +147,7 @@
         SpanishLayout.name,
         FrenchLayout.name,
         BelgianLayout.name,
+        JapaneseLayout.name,
     };
     return SNAMES;
   }
@@ -156,6 +161,7 @@
         &SpanishLayout,
         &FrenchLayout,
         &BelgianLayout,
+        &JapaneseLayout,
     };
     return LAYOUTS;
   }
--- Arduino/libraries/FabGL/src/devdrivers/kbdlayouts.cpp	2022-03-19 07:11:25.000000000 +0900
+++ Arduino/FabGL/n80FabGL/patch/src/devdrivers/kbdlayouts.cpp	2022-05-15 14:27:16.280161365 +0900
@@ -936,6 +936,67 @@
 
 
 
+/**************************************************************************************/
+/* Japanese LAYOUT                                                                    */
+/**************************************************************************************/
+const KeyboardLayout JapaneseLayout {
+  // name
+  "JP",
+
+  // desc
+  "Japanese",
+
+  // inherited layout
+  &USLayout,
+
+  // single byte scancodes
+  {
+    { 0x0E, VK_HANKAKU_ZENKAKU_KANJI },
+    { 0x55, VK_CARET },
+    { 0x54, VK_AT },
+    { 0x5B, VK_LEFTBRACKET },
+    { 0x5D, VK_RIGHTBRACKET },
+    { 0x52, VK_COLON },
+    { 0x6A, VK_YEN },
+    { 0x51, VK_BACKSLASH },
+    { 0x67, VK_MUHENKAN },
+    { 0x64, VK_HENKAN },
+    { 0x13, VK_KATAKANA_HIRAGANA_ROMAJI },
+  },
+
+  // extended scancodes (0xE0..)
+  {
+  },
+
+  // virtual keys generated by other virtual keys combinations
+  //  in_key, { CTRL, LALT, RALT, SHIFT }, out_key
+  {
+    { VK_2,            { 0, 0, 0, 1 }, VK_QUOTEDBL },     // SHIFT "2" = """
+    { VK_6,            { 0, 0, 0, 1 }, VK_AMPERSAND },    // SHIFT "6" = "&"
+    { VK_7,            { 0, 0, 0, 1 }, VK_QUOTE },        // SHIFT "7" = "'"
+    { VK_8,            { 0, 0, 0, 1 }, VK_LEFTPAREN },    // SHIFT "8" = "("
+    { VK_9,            { 0, 0, 0, 1 }, VK_RIGHTPAREN },   // SHIFT "9" = ")"
+    { VK_0,            { 0, 0, 0, 1 }, VK_SHIFT_0 },      // SHIFT "0" = ""
+    { VK_MINUS,        { 0, 0, 0, 1 }, VK_EQUALS },       // SHIFT "-" = "="
+    { VK_CARET,        { 0, 0, 0, 1 }, VK_TILDE },        // SHIFT "^" = "~"
+    { VK_YEN,          { 0, 0, 0, 1 }, VK_VERTICALBAR },  // SHIFT "￥" = "|"
+    { VK_AT,           { 0, 0, 0, 1 }, VK_GRAVEACCENT },  // SHIFT "@" = "`"
+    { VK_SEMICOLON,    { 0, 0, 0, 1 }, VK_PLUS },         // SHIFT ";" = "+"
+    { VK_COLON,        { 0, 0, 0, 1 }, VK_ASTERISK },     // SHIFT ":" = "*"
+    { VK_BACKSLASH,    { 0, 0, 0, 1 }, VK_UNDERSCORE },   // SHIFT "\" = "_"
+  },
+
+  // deadkeys
+  {
+  },
+
+  // deadkeys translation
+  {
+  },
+};
+
+
+
 
 
 
